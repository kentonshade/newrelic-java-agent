name: PR Build - Instrumentation Tests Scala 2.12

on:
  pull_request:
    branches: [ main ]

jobs:
  instrumentation_test_scala_2_12:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1
      # The first JDK set up gets to be "primary".
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 8
      - name: save JAVA_HOME as JDK8 for later usage
        run: echo "ORG_GRADLE_PROJECT_jdk8=$JAVA_HOME" >> $GITHUB_ENV
      # The second JDK is not first in the path but does reset JAVA_HOME
      - name: Set up JDK 1.7
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 7
      - name: save JAVA_HOME as JDK7 for later usage
        run: echo "ORG_GRADLE_PROJECT_jdk7=$JAVA_HOME" >> $GITHUB_ENV
      - name: Set up JDK 1.9
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 9
      - name: save JAVA_HOME as JDK9 for later usage
        run: echo "ORG_GRADLE_PROJECT_jdk9=$JAVA_HOME" >> $GITHUB_ENV
      - name: Set up JDK 1.10
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 10
      - name: save JAVA_HOME as JDK10 for later usage
        run: echo "ORG_GRADLE_PROJECT_jdk10=$JAVA_HOME" >> $GITHUB_ENV
      # JDK 11
      - name: Set up JDK 11
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11
      - name: save JAVA_HOME as JDK11 for later usage
        run: echo "ORG_GRADLE_PROJECT_jdk11=$JAVA_HOME" >> $GITHUB_ENV
      # Restore the gradle cache
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          # The docs say to use hashfiles, but gradle itself is smart enough to
          # re-download dependencies if it couldn't resolve them.
          # Because our gradle cache is _so big_, I think a 90% cache is far
          # better than a 0% cache.
          key: ${{ runner.os }}-gradle
          restore-keys: |
            ${{ runner.os }}-gradle
      # Start running the build.
      - name: run the scala 2.12 instrumentation tests
        run: ./gradlew --console=plain --parallel clean :instrumentation:build -Ptest8 -PnoInstrumentation -PnoScala -Pscala-2.12 --continue
